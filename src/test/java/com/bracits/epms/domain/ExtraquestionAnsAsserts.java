package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExtraquestionAnsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAnsAllPropertiesEquals(ExtraquestionAns expected, ExtraquestionAns actual) {
        assertExtraquestionAnsAutoGeneratedPropertiesEquals(expected, actual);
        assertExtraquestionAnsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAnsAllUpdatablePropertiesEquals(ExtraquestionAns expected, ExtraquestionAns actual) {
        assertExtraquestionAnsUpdatableFieldsEquals(expected, actual);
        assertExtraquestionAnsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAnsAutoGeneratedPropertiesEquals(ExtraquestionAns expected, ExtraquestionAns actual) {
        assertThat(expected)
            .as("Verify ExtraquestionAns auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAnsUpdatableFieldsEquals(ExtraquestionAns expected, ExtraquestionAns actual) {
        assertThat(expected)
            .as("Verify ExtraquestionAns relevant properties")
            .satisfies(e -> assertThat(e.getQuestionans()).as("check questionans").isEqualTo(actual.getQuestionans()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAnsUpdatableRelationshipsEquals(ExtraquestionAns expected, ExtraquestionAns actual) {
        assertThat(expected)
            .as("Verify ExtraquestionAns relationships")
            .satisfies(e -> assertThat(e.getQuestions()).as("check questions").isEqualTo(actual.getQuestions()));
    }
}
