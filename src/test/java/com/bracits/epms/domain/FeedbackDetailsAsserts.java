package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FeedbackDetailsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackDetailsAllPropertiesEquals(FeedbackDetails expected, FeedbackDetails actual) {
        assertFeedbackDetailsAutoGeneratedPropertiesEquals(expected, actual);
        assertFeedbackDetailsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackDetailsAllUpdatablePropertiesEquals(FeedbackDetails expected, FeedbackDetails actual) {
        assertFeedbackDetailsUpdatableFieldsEquals(expected, actual);
        assertFeedbackDetailsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackDetailsAutoGeneratedPropertiesEquals(FeedbackDetails expected, FeedbackDetails actual) {
        assertThat(expected)
            .as("Verify FeedbackDetails auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackDetailsUpdatableFieldsEquals(FeedbackDetails expected, FeedbackDetails actual) {
        assertThat(expected)
            .as("Verify FeedbackDetails relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getCommentsforfeedbacksubtype())
                        .as("check commentsforfeedbacksubtype")
                        .isEqualTo(actual.getCommentsforfeedbacksubtype())
            )
            .satisfies(e -> assertThat(e.getRatingvalue()).as("check ratingvalue").isEqualTo(actual.getRatingvalue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackDetailsUpdatableRelationshipsEquals(FeedbackDetails expected, FeedbackDetails actual) {
        assertThat(expected)
            .as("Verify FeedbackDetails relationships")
            .satisfies(e -> assertThat(e.getFeedbackSubType()).as("check feedbackSubType").isEqualTo(actual.getFeedbackSubType()))
            .satisfies(e -> assertThat(e.getResponder()).as("check responder").isEqualTo(actual.getResponder()));
    }
}
