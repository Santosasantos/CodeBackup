package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SkillDevelopmentDetailsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillDevelopmentDetailsAllPropertiesEquals(SkillDevelopmentDetails expected, SkillDevelopmentDetails actual) {
        assertSkillDevelopmentDetailsAutoGeneratedPropertiesEquals(expected, actual);
        assertSkillDevelopmentDetailsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillDevelopmentDetailsAllUpdatablePropertiesEquals(
        SkillDevelopmentDetails expected,
        SkillDevelopmentDetails actual
    ) {
        assertSkillDevelopmentDetailsUpdatableFieldsEquals(expected, actual);
        assertSkillDevelopmentDetailsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillDevelopmentDetailsAutoGeneratedPropertiesEquals(
        SkillDevelopmentDetails expected,
        SkillDevelopmentDetails actual
    ) {
        assertThat(expected)
            .as("Verify SkillDevelopmentDetails auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillDevelopmentDetailsUpdatableFieldsEquals(
        SkillDevelopmentDetails expected,
        SkillDevelopmentDetails actual
    ) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSkillDevelopmentDetailsUpdatableRelationshipsEquals(
        SkillDevelopmentDetails expected,
        SkillDevelopmentDetails actual
    ) {
        assertThat(expected)
            .as("Verify SkillDevelopmentDetails relationships")
            .satisfies(
                e -> assertThat(e.getSkillDevelopmentType()).as("check skillDevelopmentType").isEqualTo(actual.getSkillDevelopmentType())
            )
            .satisfies(e -> assertThat(e.getResponder()).as("check responder").isEqualTo(actual.getResponder()));
    }
}
