package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FeedbackResponderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackResponderAllPropertiesEquals(FeedbackResponder expected, FeedbackResponder actual) {
        assertFeedbackResponderAutoGeneratedPropertiesEquals(expected, actual);
        assertFeedbackResponderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackResponderAllUpdatablePropertiesEquals(FeedbackResponder expected, FeedbackResponder actual) {
        assertFeedbackResponderUpdatableFieldsEquals(expected, actual);
        assertFeedbackResponderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackResponderAutoGeneratedPropertiesEquals(FeedbackResponder expected, FeedbackResponder actual) {
        assertThat(expected)
            .as("Verify FeedbackResponder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackResponderUpdatableFieldsEquals(FeedbackResponder expected, FeedbackResponder actual) {
        assertThat(expected)
            .as("Verify FeedbackResponder relevant properties")
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getStakeholderEmail()).as("check stakeholderEmail").isEqualTo(actual.getStakeholderEmail()))
            .satisfies(e -> assertThat(e.getResponderStatus()).as("check responderStatus").isEqualTo(actual.getResponderStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackResponderUpdatableRelationshipsEquals(FeedbackResponder expected, FeedbackResponder actual) {
        assertThat(expected)
            .as("Verify FeedbackResponder relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()))
            .satisfies(e -> assertThat(e.getFeedback()).as("check feedback").isEqualTo(actual.getFeedback()));
    }
}
