package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExtraquestionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAllPropertiesEquals(Extraquestion expected, Extraquestion actual) {
        assertExtraquestionAutoGeneratedPropertiesEquals(expected, actual);
        assertExtraquestionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAllUpdatablePropertiesEquals(Extraquestion expected, Extraquestion actual) {
        assertExtraquestionUpdatableFieldsEquals(expected, actual);
        assertExtraquestionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionAutoGeneratedPropertiesEquals(Extraquestion expected, Extraquestion actual) {
        assertThat(expected)
            .as("Verify Extraquestion auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionUpdatableFieldsEquals(Extraquestion expected, Extraquestion actual) {
        assertThat(expected)
            .as("Verify Extraquestion relevant properties")
            .satisfies(e -> assertThat(e.getQuestion()).as("check question").isEqualTo(actual.getQuestion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtraquestionUpdatableRelationshipsEquals(Extraquestion expected, Extraquestion actual) {
        assertThat(expected)
            .as("Verify Extraquestion relationships")
            .satisfies(e -> assertThat(e.getFeedback()).as("check feedback").isEqualTo(actual.getFeedback()));
    }
}
