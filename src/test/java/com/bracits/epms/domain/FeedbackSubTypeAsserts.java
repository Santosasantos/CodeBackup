package com.bracits.epms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FeedbackSubTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackSubTypeAllPropertiesEquals(FeedbackSubType expected, FeedbackSubType actual) {
        assertFeedbackSubTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertFeedbackSubTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackSubTypeAllUpdatablePropertiesEquals(FeedbackSubType expected, FeedbackSubType actual) {
        assertFeedbackSubTypeUpdatableFieldsEquals(expected, actual);
        assertFeedbackSubTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackSubTypeAutoGeneratedPropertiesEquals(FeedbackSubType expected, FeedbackSubType actual) {
        assertThat(expected)
            .as("Verify FeedbackSubType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackSubTypeUpdatableFieldsEquals(FeedbackSubType expected, FeedbackSubType actual) {
        assertThat(expected)
            .as("Verify FeedbackSubType relevant properties")
            .satisfies(e -> assertThat(e.getFeedbacksubname()).as("check feedbacksubname").isEqualTo(actual.getFeedbacksubname()))
            .satisfies(
                e -> assertThat(e.getFeedbackdescription()).as("check feedbackdescription").isEqualTo(actual.getFeedbackdescription())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedbackSubTypeUpdatableRelationshipsEquals(FeedbackSubType expected, FeedbackSubType actual) {
        assertThat(expected)
            .as("Verify FeedbackSubType relationships")
            .satisfies(e -> assertThat(e.getFeedbackType()).as("check feedbackType").isEqualTo(actual.getFeedbackType()));
    }
}
